import React, { useMemo, useState } from 'react';

const PROJECTS = [
  {
    id: 'forum-platform',
    company: 'Beaconfire',
    role: 'Java Full-stack Software Engineer',
    location: 'East Windsor, NJ (Remote)',
    period: 'Jun 2021 – Present',
    tech: [
      'Java',
      'Spring',
      'Hibernate',
      'React 18',
      'Mockito',
      'AWS RDS',
      'JWT',
      'Spring Security',
      'Spring cloud Gateway',
      'Spring Cloud OpenFeign',
      'Spring Boot',
      'Ant Design',
      'Kafka',
      'MySQL',
      'MongoDB Atlas',
      'JUnit',
      'Jaspyt',
      'Eureka',
      'Maven',
      'Actuator',
      'Swagger',
      'Spring Data Repository',
      'AWS RDS',
      'AWS S3',
      'HTML',
      'BCrypt',
      'Spring AOP',
      'microservices',
    ],
    thumbnail: '/forum.png',
    links: {
      'Source Code': 'https://github.com/zephyrz73/demo-b',
    },
    description: `Built and maintained a scalable forum platform using Spring-based microservices, with strong access control,
async messaging, and cloud-native service orchestration.`,
    details: [
      `API Development: Designed and implemented JWT-token based authentication and role-based administrative
endpoints (user activation, post moderation, role assignment) with Spring Boot, Spring Security, JWT, MySQL`,
      `Messaging: Developed an asynchronous Email Service leveraging Kafka to dispatch verification and reset-
password emails with HTML templates and expiring tokens`,
      `Security: Enforced hierarchical role-based access control, implemented token validation workflows, secured
endpoints with action-level (CRUD) authorization, and applied password encryption using BCrypt and Jaspyt`,
      `Testing: Achieved 94% unit test coverage using JUnit and Mockito for service logic; implemented centralized
global exception handling and logging with Spring AOP to improve reliability and maintainability`,
      `Architecture & Data: Integrated Eureka and Spring Cloud Gateway for service discovery and routing;
structured persistence using MySQL and MongoDB Atlas with isolated schemas`,
      `Frontend: Built with React 18 and Ant Design, implemented responsive multi-platform UI with global navigation bar, secure routing, and reusable components across views. `,
      `Pages include Login, Register, User Home, Post Detail, User Profile, Contact Admin, and Admin-only dashboards (Message Management, User Management, Post Moderation).`,
    ],
  },
  {
    id: 'air-quality-portal',
    company: 'Violett Inc.',
    role: 'Contract Full-stack Software Engineer',
    location: 'Seattle, WA',
    period: 'Sep 2020 – May 2024',
    tech: [
      'Java',
      'Python',
      'React.js',
      'D3.js',
      'Material-UI',
      'Dart',
      'Flutter',
      'Syncfusion',
      'IoT',
      'AWS Amplify',
      'GitHub Action',
      'JavaScript',
      'AWS Lambda Functions',
      'Agile',
      'C++',
      'AWS IoT',
      'MQTT',
      'Bluetooth',
      'ESP32',
      'TLS',
      'IOS',
      'Android',
      'AWS DynamoDB',
      'NoSQL',
      'CI/CD',
      'AWS',
    ],
    thumbnail: '/air-quality.png',
    links: {
      'Company Website': 'https://www.violettuv.com/',
      Dashboard: 'https://www.dashboard.violett.com/',
    },
    description:
      'Company website & cross-platform portal & mobile app visualizing real-time IoT air-quality data. Built interactive widget, serverless data analysis, Bluetooth setup, and automated CI/CD',
    details: [
      'Developed a full-stack, multi-platform customer portal (enterprise + household) on AWS for an IoT-enabled air-quality-monitoring ecosystem carried by smart purifiers.',
      'Frontend: Built the user interface that displayed device-collected real-time air quality data visuals, controled devices on customizable indoor floor plans, using JavaScript, React.js, Material-UI, and D3.js real-time graphs',
      'Backend: Created a web service, which performed CRUD operations to AWS DynamoDB to authorize user, managed device and monitor status, fetched, and analyzed data collected, with AWS Lambda Functions in Python and Java. ',
      'Hardware: Developed a networking solution using ESP32 to securely transmit data to AWS IoT using MQTT and TLS in C++ facilitating real-time data monitoring and integration with cloud resource',
      'Mobile: Developed a cross-platform (iOS/Android) mobile app with Bluetooth device registration enabled, integrated website functionalities, animations, and gesture controls, using Dart and Flutter and SyncFusion for interactive graphs.',
      'CI/CD: Configured AWS Amplify Team Environment and GitHub Action to automate deployment.',
      'Assembled and mentored a skilled team and fostered iterative Agile development adoption',
    ],
  },
  {
    id: 'renters-insurance',
    company: 'AppFolio',
    role: 'Software Engineer Intern',
    location: 'Santa Barbara, CA',
    period: 'Jun 2023 – Sep 2023',
    tech: [
      'TypeScript',
      'Ruby',
      'React',
      'Mocha',
      'Sinon',
      'Optimizely',
      'React Testing Library',
      'Ruby on Rails',
      'HTML',
      'CSS',
      'JavaScript',
      'Figma',
      'Git',
      'Agile',
      'RESTful API',
      'Coastline UI',
      'A/B',
      'UI/UX',
      'conversion rate',
    ],
    thumbnail: '/appfolio.jpg',
    links: {
      portal:
        'https://passport.appf.io/sign_in?idp_type=tportal&vhostless=true',
    },
    description:
      'Enhanced insurance purchase flow with chatbot, address suggestions, and dynamic A/B experiments — boosted conversion by 30% and cut load times by 21%. Thorough test suite with Mocha & React Testing Library.',
    details: [
      `Implemented features including user intention questionaire, Chatbot, Address Suggestion/Verification
widget in React and TypeScript with guidance of Figma UX design and the Appfolio’s Coastline UI package.`,
      `Orchestrated data driven Optimizely A/B tests with variable user traffic across different release states.`,
      `Developed unit tests with test spies, stubs, and mocks in Mocha, Sinon, and React for features and patches.`,
      `Resolved major staled UI bugs, cleaned up finished tests, recognized for high-quality code review.`,
      `Patched API endpoints in Ruby and reduce load time by 21%`,
      `Contributed to features with 30% positive CR (conversion rate), identified designs with 18.1% negative CR`,
    ],
  },

  {
    id: 'pulumi-cms',
    company: 'Pulumi',
    role: 'Software Engineer Intern',
    location: 'Seattle, WA (remote)',
    period: 'Jun 2020 – Sept 2020',
    tech: [
      'TypeScript',
      'Go',
      'React',
      'Infrastructure as Code',
      'AWS',
      'CMS',

      'Netlify CMS',
      'Hugo',
      'AWS (S3 + CloudFront)',
      'GitHub OAuth',
      'Pulumi',
      'HTML',
      'CSS',
      'S3',
      'CloudFront',
      'ACM',
      'OAuth',
      'GitHub',
      'Route 53',
      'Lambda@Edge',
      'JavaScript',
      'Markdown',
      'static site',
    ],
    thumbnail: '/pulumi.jpg',
    links: {
      'Netlify CMS on AWS with Pulumi':
        'https://www.pulumi.com/blog/deploying-netlify-cms-on-aws/',
      'OAuth Server for CMS App':
        'https://www.pulumi.com/blog/deploying-the-infrastructure-of-oauth-server-for-cms-app/',
      howTo:
        'https://www.pulumi.com/registry/packages/aws/how-to-guides/aws-ts-netlify-cms-and-oauth/',
      repo: 'https://github.com/zephyrz73/cms-and-oauth-reduced-version',
    },
    description:
      'Built a fully-serverless CMS stack as an internal tool—custom React editing UI, GitHub-OAuth auth, and AWS Infrastructure as Code(IaC) with Pulumi—then open-sourced the template and authored best-practice guides.',
    details: [
      'Proposed and shipped a CMS portal for Pulumi.com, customizing Netlify CMS to work with Hugo-generated static site pages and GitHub workflows.',
      'Developed React preview panes and rich-text widgets, enabling live editing and instant markdown previews for content authors.',
      'Authored a lightweight Go GitHub OAuth server; integrated GitHub as the identity provider to secure commits from the CMS UI.',
      'Codified the entire AWS backend (S3, CloudFront, Lambda@Edge, ACM, Route 53) in Pulumi TypeScript, delivering repeatable one-command deployments.',
      'Published three in-depth blog posts and a turnkey sample in Pulumi Registry; resolved a long-standing limitation in the Netlify CMS community by enabling fully serverless self-hosting on AWS; received community shout-outs and upstream PRs.',
    ],
  },
  {
    id: 'broadband-pricing-crawler',
    company: 'Mobility Management & Networking Lab, UCSB',
    role: 'Researcher',
    location: 'Santa Barbara, CA, USA',
    period: 'Sep 2023 – Jan 2025',
    tech: [
      'Python',
      'Selenium',
      'Proxy',
      'Docker',
      'Linux Script',
      'Web Scraping',
      'Sklearn',
      'Lasso Regression',
      'Ridge Regression',
      'Pandas',
      'NumPy',
      'Data Science',
      'CI/CD',
      'ISP',
      'IP ban',
      'HTTP Throttling',
      'TLS/SSL',
      'Pandas',
      'Numpy',
      'Bright Data',
      'TensorFlow',
      'OCR',
      'layout segmentation',
      'brightness normalization',
    ],
    thumbnail: '/ucsb-mmnl.jpg',
    links: {
      paper: 'https://dl.acm.org/doi/10.1145/3651890.3672272',
    },
    description:
      'Built an address-level broadband-plan pricing crawler and statistical model that cuts manual lookup by 70 % and powers an ACM SIGCOMM 2024 study on U.S. internet-access equity.',
    details: [
      'Engineered a headless Python + Selenium crawler to query ISP sites at scale while evading anti-bot checks; trimmed manual query time by 70 %.',
      'Implemented adaptive connection throttling and request rotation via Bright Data residential proxies; boosted scraping throughput by 50 % without IP bans.',
      'Trained a lightweight CNN model (using TensorFlow/Keras) to extract and classify pricing info from noisy page screenshots; applied preprocessing steps including OCR, layout segmentation, and brightness normalization to handle dynamic web content and anti-scraping overlays—resulting in an 80 % increase in successful data extraction rate(hit rate).',
      'Containerized the pipeline with Docker and Linux scripts for reproducible, multi-node execution on lab servers.',
      'Applied lasso and ridge regression with Pandas, NumPy, and TensorFlow to reveal ISP pricing strategies across socioeconomic factors, informing policy analysis.',
      'Co-authored the paper “Assessing the Efficacy of the Connect America Fund in Addressing Internet Access Inequities in the US,” published at ACM SIGCOMM 2024 (Sydney, Australia).',
    ],
  },
  {
    id: 'auv-parking-vision',
    company: 'Aucean Tech Ltd.',
    role: 'Computer Vision Engineer',
    location: 'Zhoushan, Zhejiang, China',
    period: 'Jan 2022 – Apr 2022',
    tech: [
      'Python',
      'C++',
      'OpenCV',
      'YOLOv5',
      'LabelImg',
      'Image Augmentation',
      'CLAHE',
      'Canny Edge',
      'Ellipse Fitting',
      'Convex Hull',
      'Dehazing',
      'Robotics',
      'AUV',
      'data augmentation',
      'contrast shift',
      'Gaussian blur',
    ],
    thumbnail: 'https://zephyrz73.github.io/aucean-tech.jpg',
    links: {},
    description:
      'Engineered a optical recognition system for Z3-Mini AUV to identify underwater parking base centers in turbid, reflective lake environments, using YOLO object detection and fallback OpenCV pipelines.',
    details: [
      'Collected and manually annotated murky underwater footage with LabelImg to train a YOLOv5 object detection model capable of locating metallic docking structures under variable lighting and biofouling conditions.',
      'Applied data augmentation (brightness/contrast shift, Gaussian blur, horizontal flip) to expand limited training data and improve model robustness.',
      'Integrated YOLOv5 into the AUV’s visual system to perform real-time detection and center offset computation for docking pose correction.',
      'Built a fallback traditional CV pipeline using CLAHE-based contrast enhancement, bilateral filtering, Canny edge detection, contour extraction, convex hull grouping, and ellipse fitting to locate docking base center points.',
      'Benchmarked hybrid solution across multiple water conditions; fallback pipeline ensured system resilience when detection confidence was low or compute constraints prevented model inference.',
    ],
  },

  {
    id: 'database-management-system-from-scratch',
    company: 'Personal Project',
    role: 'System Designer & Developer',
    location: 'University of Washington',
    period: 'Jan 2021 – Mar 2021',
    tech: [
      'Java',
      'SQL',
      'Database Engine',
      'B+ Tree',
      'Buffer Pool',
      'Query Parser',
      'File System',
      'Storage Engine',
    ],
    links: {
      repo: 'https://github.com/zephyrz73/FundemantalDatabaseManagementSystem',
    },
    description:
      'Implemented a fundamental DBMS from scratch in Java, featuring SQL-like query support, a buffer pool, B+ tree indexing, and page-based storage.',
    details: [
      'Built core DBMS components including storage engine, buffer pool, page manager, and B+ tree indexing system.',
      'Designed a simple SQL-like language parser to support SELECT, INSERT, and DELETE queries.',
      'Implemented concurrency-safe page I/O, managing block-level disk access using a custom file format.',
    ],
  },
  {
    id: 'tcp-udp-hangman-game',
    company: 'Personal Project',
    role: 'Network Systems Developer',
    location: 'University of Washington',
    period: 'Sep 2020 – Dec 2020',
    tech: [
      'C++',
      'TCP',
      'UDP',
      'Socket Programming',
      'Checksum',
      'Sliding Window',
      'Stop-and-Wait',
      'Selective Repeat',
      'File Transfer Protocol',
      'Multithreading',
      'Network Simulation',
    ],
    links: {
      repo: 'https://github.com/zephyrz73/networking_assignment',
    },
    description:
      'Implemented core transport-layer protocols (Stop-and-Wait, Selective Repeat) from scratch over UDP to simulate reliable data transfer systems.',
    details: [
      'Developed multiple networking protocols from scratch in C++, including Stop-and-Wait and Selective Repeat ARQ.',
      'Implemented packet loss, corruption, and reordering simulation to test protocol resilience.',
      'Built a custom reliable file transfer protocol using UDP sockets with sliding window, checksums, and timeouts.',
      'Simulated TCP-like behavior such as sequencing, acknowledgments, retransmissions, and congestion control.',
    ],
  },
  {
    id: 'real-estate-ar',
    company: 'Personal Project',
    role: 'AR App Developer',
    location: 'Remote',
    period: 'May 2023 – Jul 2023',
    tech: [
      'Swift',
      'Swift UI',
      'ARKit',
      'RealityKit',
      'CoreLocation',
      'SwiftUI',
      'Xcode',
      'iOS',
      '3D Rendering',
      'Geolocation',
      'Sensor Fusion',
    ],
    thumbnail: 'https://zephyrz73.github.io/realestate-ar.jpg',
    links: {
      repo: 'https://github.com/zephyrz73/RealEstateAR',
      demo: 'https://drive.google.com/drive/folders/1vhKniYmU3hcNCgaZDUMzrb8jI0SCY_Ax?dmr=1&ec=wgc-drive-globalnav-goto',
    },
    description:
      'Built an iOS app prototype that uses ARKit + CoreLocation to visualize nearby real estate listings as floating 3D cards in augmented reality space.',
    details: [
      'Integrated ARKit and CoreLocation to render directional 3D property cards based on user orientation and GPS coordinates.',
      'Developed a SwiftUI interface to allow toggling between AR and list views, supporting real-time camera and sensor input.',
      'Mapped latitude/longitude geolocation data to azimuth-anchored RealityKit anchors, enabling realistic spatial positioning of nearby listings.',
      'Applied sensor fusion logic to continuously update heading and position of AR content based on gyroscope and compass data.',
      'Designed for real estate agents and property seekers to explore nearby housing options via immersive visual discovery.',
    ],
  },

  {
    id: 'web-dev-lab',
    company: 'Personal Projects',
    role: 'Frontend Developer',
    location: 'Remote',
    period: '2020 – 2021',
    tech: [
      'JavaScript',
      'HTML',
      'CSS',
      'DOM API',
      'Animation',
      'Canvas',
      'Web APIs',
    ],
    thumbnail: 'https://zephyrz73.github.io/web-lab.jpg',
    links: {
      repo: 'https://github.com/zephyrz73/WebDevelopmentProjects',
    },
    description:
      'Collection of frontend micro-projects built using pure JavaScript, demonstrating understanding of DOM manipulation, animation, and user interaction.',
    details: [
      'Implemented a series of interactive web components and mini games without frontend frameworks.',
      'Explored native browser APIs including Canvas drawing, mouse event handling, and simple physics.',
      'Showcased creativity in problem solving with zero library dependencies.',
    ],
  },

  {
    id: 'balloon-it-up',
    company: 'Personal Project',
    role: 'Game Developer',
    location: 'Remote',
    period: 'Summer 2020',
    tech: [
      'Unity',
      'C#',
      '2D Game',
      'Game Physics',
      'UI Design',
      'Kongregate',
      'Animation',
    ],
    thumbnail: 'https://zephyrz73.github.io/balloon.jpg',
    links: {
      repo: 'https://github.com/zephyrz73/balloonEscape',
      game: 'https://www.kongregate.com/games/ballonitup/balloon-it-up',
    },
    description:
      'Designed and developed a casual 2D game in Unity where players navigate a balloon through obstacles — published on Kongregate.',
    details: [
      'Used Unity and C# to implement movement, collision detection, score tracking, and level progression.',
      'Created engaging game UI and visual assets with particle effects and responsive animations.',
      'Deployed the game to Kongregate, making it publicly playable and sharable.',
    ],
  },
  {
    id: 'android-hci',
    company: 'Personal Project',
    role: 'Mobile Developer',
    location: 'University of Washington',
    period: 'Apr 2020 – Jun 2020',
    tech: [
      'Java',
      'Android Studio',
      'Material Design',
      'HCI',
      'Activity Lifecycle',
      'UI/UX',
    ],
    links: {
      repo: 'https://github.com/zephyrz73/AndroidDevelopmentAndHCI',
    },
    description:
      'Developed a series of Android apps with focus on human-computer interaction and user-centered design.',
    details: [
      'Built mobile interfaces using Java and Android SDK, following Material Design principles.',
      'Prototyped and evaluated user flows with HCI feedback to improve usability.',
      'Learned practical skills in lifecycle management, navigation, and UI responsiveness.',
    ],
  },
];

export default PROJECTS;
